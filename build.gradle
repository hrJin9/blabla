buildscript {
	ext {
		restdocsApiSpecVersion = '0.18.2'
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version'3.3.2'
	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
}

group = 'com.blabla'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// queryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Swagger + REST Docs
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ehcache
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'javax.cache:cache-api:1.1.1'
	implementation 'org.ehcache:ehcache:3.9.0'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-core:2.3.0.1'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.3'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy 'openapi3'
}

openapi3 {
	setServer("http://localhost:8080")
	title = "블라블라 API Docs"
	description = "블라블라 API 명세서"
	version = "0.0.1"
	format = "json"

	outputDirectory = "src/main/resources/static/docs"
	outputFileNamePrefix = "openapi3.${project.name}"
	project.mkdir "${project.projectDir}/${outputDirectory}"
}

def generated = "src/main/generated"
sourceSets.main.java.srcDir generated

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean {
	delete file(generated)
}

jar {
	enabled = false
}